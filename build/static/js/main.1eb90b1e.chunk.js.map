{"version":3,"sources":["components/ButtonNeumorphism.js","assets/TimerFinished.wav","components/Timer.js","components/ActivityTracker.js","enums/StepActionEnum.js","enums/StepTitleEnum.js","pages/Dashboard.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonNeumorphism","props","iconClassName","icon","buttonLabel","className","onClick","handleButtonClick","Timer","useState","countdown","setCountdown","timerId","setTimerId","timerStopped","setTimerStopped","remainingCountDown","setRemainingCountDown","timerAudio","Audio","TimerFinished","seconds","String","padStart","minutes","Math","floor","pauseTimerAudio","pause","useEffect","clearInterval","loop","play","setInterval","proceedToTheNextStep","ActivityTracker","steps","map","step","index","action","title","timePeriod","StepActionEnum","StepTitleEnum","Dashboard","setSteps","find","undefined","getActiveStepTimePeriod","activeStepIndex","shouldAddOneMoreStep","updatedSteps","stepIndex","length","addedStep","lastStep","newActiveStep","Contact","href","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oWAqBeA,MAlBf,SAA4BC,GACxB,IAAMC,EAAa,kCAA8BD,EAAME,KAApC,SACbC,EAAcH,EAAMG,YAM1B,OACI,qBAAKC,UAAU,sBAAf,SACI,yBAAQA,UAAU,qBAAqBC,QAPrB,WAClBL,EAAMM,mBACNN,EAAMM,qBAKN,UACI,mBAAGF,UAAWH,IACd,uBAAOG,UAAU,2BAAjB,SAA6CD,UCf9C,MAA0B,0CC2F1BI,MAtFf,SAAeP,GACb,MAAkCQ,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAoDN,mBAAS,GAA7D,mBAAOO,EAAP,KAA2BC,EAA3B,KACIC,EAAa,IAAIC,MAAMC,GACvBC,EAAUC,OAAON,EAAqB,IAAIO,SAAS,EAAG,GACtDC,EAAUF,OAAOG,KAAKC,MAAMV,EAAqB,KAAKO,SAAS,EAAG,GAShEI,EAAkB,WACtBT,EAAWU,SA8Cb,OAdAC,qBAAU,WACRd,GAAgB,GAChBJ,EAA+B,GAAlBV,EAAMS,WACnBO,EAAwC,GAAlBhB,EAAMS,aAE3B,CAACT,EAAMS,YAEVmB,qBAAU,WACJb,GAAsB,IACxBc,cAAclB,GA9ChBM,EAAWa,MAAO,EAClBb,EAAWc,UAgDV,CAAChB,IAGF,sBAAKX,UAAU,QAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBmB,IACxB,qBAAKnB,UAAU,QAAf,wBAEF,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBgB,IACxB,qBAAKhB,UAAU,QAAf,2BAGJ,sBAAKA,UAAU,qBAAf,UACE,cAAC,EAAD,CAAmBD,YAAcU,EAAyB,OAAV,QAAkBX,KAAOW,EAAyB,OAAV,QACtFP,mBAAqC,IAAjBO,EA/CG,WAC7Ba,IACAG,cAAclB,GACdG,GAAgB,IAbY,WAC5BA,GAAgB,GAChBY,IACAd,EACEoB,aAAY,WACVhB,GAAsB,SAACD,GAAD,OAAwBA,EAAqB,OAClE,SAqDD,cAAC,EAAD,CAAmBZ,YAAY,OAAOD,KAAK,OAAOI,kBA3CzB,WAC7BoB,IACAG,cAAclB,GACdG,GAAgB,GAChBE,EAAsBP,MAwClB,cAAC,EAAD,CAAmBN,YAAY,OAAOD,KAAK,gBAAgBI,kBArCxC,WACvBoB,IACAG,cAAclB,GACdX,EAAMiC,iCCtBKC,G,MA1BS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,qBAAK/B,UAAU,mBAAf,SACE,qBAAKA,UAAU,WAAf,SACG+B,GACCA,EAAMC,KAAI,SAACC,EAAMC,GAAP,OACR,sBAAKlC,UAAWiC,EAAKE,OAAS,QAA9B,UACE,mBACE,cAAY,OACZnC,UACiB,aAAfiC,EAAKG,MACD,sBACA,gBAGR,sBAAKpC,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBiC,EAAKG,QAC7B,sBAAKpC,UAAU,cAAf,UAA8BiC,EAAKI,WAAnC,mBAXwCH,YCT3CI,G,MACE,aADFA,EAED,SAFCA,EAGC,WCHDC,EACC,WADDA,EAEF,QC4EIC,MAvEf,WAEI,MAA0BpC,mBAAS,CAC7B,CACEgC,MAAOG,EACPF,WAAY,GACZF,OAAQG,GAEV,CACEF,MAAOG,EACPF,WAAY,EACZF,OAAQG,GAEV,CACEF,MAAOG,EACPF,WAAY,GACZF,OAAQG,KAdhB,mBAAOP,EAAP,KAAcU,EAAd,KA6DA,OACI,sBAAKzC,UAAU,YAAf,UACI,cAAC,EAAD,CAAiB+B,MAAOA,IACxB,cAAC,EAAD,CAAO1B,UA9CiB,WAC5B,IAAI4B,EAAOF,EAAMW,MAAK,SAAAT,GAAI,OAAIA,EAAKE,SAAWG,KAC9C,QAAaK,IAATV,EAGJ,OAAOA,EAAKI,WAyCUO,GAA2Bf,qBA3BxB,WACzB,IAAKgB,OAA0CF,EAAzBG,GAAoC,EACtDC,EAAehB,EAAMC,KAAI,SAACC,EAAMe,GAUhC,OATIf,EAAKE,SAAWG,IAChBO,EAAkBG,EAClBf,EAAKE,OAASG,QAEMK,IAApBE,GAAkCA,EAAkB,IAAOG,GAAajB,EAAMkB,OAAS,EAAIJ,IAC3Fd,EAAMiB,GAAWb,OAASG,EAC1BQ,GAAuB,GAGpBb,KAGX,GAAIa,EAAsB,CACtB,IAAII,EA3BU,WAClB,IAAIC,EAAWpB,EAAMA,EAAMkB,OAAS,GAOpC,YALiBN,IAAbQ,GAA0BA,EAASf,QAAUG,EACjC,CAACH,MAAOG,EAAwBF,WAAY,GAAIF,OAAQG,GAExD,CAACF,MAAOG,EAAqBF,WAAY,EAAGF,OAAQG,GAqBhDc,GAChBX,GAAS,SAAAV,GAAK,4BAAQgB,GAAR,CAAsBG,YAGpCT,GAAS,SAAAV,GAAK,OAAIgB,Y,MC7CfM,MAlBf,SAAkBzD,GAEd,OACI,sBAAKI,UAAU,kBAAf,UACI,mBAAGsD,KAAK,iCAAiCC,OAAO,SAAhD,SACI,qBAAKvD,UAAU,sBAAf,SACI,mBAAG,cAAY,OAAOA,UAAU,wBAGxC,mBAAGsD,KAAK,+DAA+DC,OAAO,SAA9E,SACI,qBAAKvD,UAAU,wBAAf,SACI,mBAAG,cAAY,OAAOA,UAAU,8BCArCwD,MATf,WACE,OACE,sBAAKxD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1eb90b1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './ButtonNeumorphism.css';\r\n\r\nfunction ButtonNeumorphism (props) {\r\n    const iconClassName = `neumorphism-button-icon ${props.icon} icon`;\r\n    const buttonLabel = props.buttonLabel;\r\n    const handleButtonClick = () => {\r\n        if (props.handleButtonClick) {\r\n            props.handleButtonClick();\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"neumorphism-wrapper\">\r\n            <button className=\"neumorphism-button\" onClick={handleButtonClick}>\r\n                <i className={iconClassName}></i>\r\n                <label className=\"neumorphism-button-label\">{buttonLabel}</label>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ButtonNeumorphism;","export default __webpack_public_path__ + \"static/media/TimerFinished.1238e8ed.wav\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./Timer.css\";\r\nimport ButtonNeumorphism from \"./ButtonNeumorphism\";\r\nimport TimerFinished from \"../assets/TimerFinished.wav\";\r\n\r\nfunction Timer(props) {\r\n  const [countdown, setCountdown] = useState(0);\r\n  const [timerId, setTimerId] = useState();\r\n  const [timerStopped, setTimerStopped] = useState(true);\r\n  const [remainingCountDown, setRemainingCountDown] = useState(0);\r\n  var timerAudio = new Audio(TimerFinished);\r\n  var seconds = String(remainingCountDown % 60).padStart(2, 0);\r\n  var minutes = String(Math.floor(remainingCountDown / 60)).padStart(2, 0);\r\n\r\n  //#region functions\r\n\r\n  const playTimerAudio = () => {\r\n    timerAudio.loop = true;\r\n    timerAudio.play();\r\n  }\r\n  \r\n  const pauseTimerAudio = () => {\r\n    timerAudio.pause();\r\n  }\r\n\r\n  const handlePlayButtonClick = () => {\r\n    setTimerStopped(false);\r\n    pauseTimerAudio();\r\n    setTimerId(\r\n      setInterval(() => {\r\n        setRemainingCountDown((remainingCountDown) => remainingCountDown - 1);\r\n      }, 1000)\r\n    );\r\n  }\r\n\r\n  const handlePauseButtonClick = () => {\r\n    pauseTimerAudio();\r\n    clearInterval(timerId);\r\n    setTimerStopped(true);\r\n  };\r\n\r\n  const handleResetButtonClick = () => {\r\n    pauseTimerAudio();\r\n    clearInterval(timerId);\r\n    setTimerStopped(true);\r\n    setRemainingCountDown(countdown);\r\n  };\r\n\r\n  const handleNextAction = () => {\r\n    pauseTimerAudio();\r\n    clearInterval(timerId);\r\n    props.proceedToTheNextStep();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimerStopped(true);\r\n    setCountdown(props.countdown * 60);\r\n    setRemainingCountDown(props.countdown * 60);\r\n\r\n  }, [props.countdown]);\r\n\r\n  useEffect(() => {\r\n    if (remainingCountDown <= 0) {\r\n      clearInterval(timerId);    \r\n      playTimerAudio();\r\n    }\r\n  }, [remainingCountDown]);\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <div className=\"countdown\">\r\n        <div className=\"ui small statistic\">\r\n          <div className=\"value\">{minutes}</div>\r\n          <div className=\"label\">minutes</div>\r\n        </div>\r\n        <div className=\"ui small statistic\">\r\n          <div className=\"value\">{seconds}</div>\r\n          <div className=\"label\">seconds</div>\r\n        </div>\r\n      </div>      \r\n      <div className=\"timer-buttons-wrap\">\r\n        <ButtonNeumorphism buttonLabel={!timerStopped ? \"Pause\" : \"Play\"} icon={!timerStopped ? \"pause\" : \"play\"} \r\n          handleButtonClick={ timerStopped === false ? handlePauseButtonClick : handlePlayButtonClick}>          \r\n        </ButtonNeumorphism>\r\n        <ButtonNeumorphism buttonLabel=\"Stop\" icon=\"stop\" handleButtonClick={handleResetButtonClick}></ButtonNeumorphism>\r\n        <ButtonNeumorphism buttonLabel=\"Next\" icon=\"chevron right\" handleButtonClick={handleNextAction}></ButtonNeumorphism>   \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport \"./ActivityTracker.css\";\r\n\r\nconst ActivityTracker = ({ steps }) => {\r\n  return (\r\n    <div className=\"activity-tracker\">\r\n      <div className=\"ui steps\">\r\n        {steps &&\r\n          steps.map((step, index) => (\r\n            <div className={step.action + \" step\"} key={index}>\r\n              <i\r\n                aria-hidden=\"true\"\r\n                className={\r\n                  step.title === \"Focusing\"\r\n                    ? \"circle outline icon\"\r\n                    : \"coffee icon\"\r\n                }\r\n              ></i>\r\n              <div className=\"content\">\r\n                <div className=\"title\">{step.title}</div>\r\n                <div className=\"description\">{step.timePeriod} minutes</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityTracker;","export const StepActionEnum = {\r\n    Completed: 'completed',\r\n    Active: 'active',\r\n    Disabled: 'disabled'\r\n}\r\n","export const StepTitleEnum = {\r\n    Focusing: \"Focusing\",\r\n    Break: \"Break\"\r\n}","import React, { useState } from 'react'\r\nimport Timer from '../components/Timer'\r\nimport ActivityTracker from '../components/ActivityTracker'\r\nimport './Dashboard.css'\r\nimport { StepActionEnum } from '../enums/StepActionEnum'\r\nimport { StepTitleEnum } from '../enums/StepTitleEnum'\r\n\r\nfunction Dashboard () {\r\n    \r\n    const [steps, setSteps] = useState([\r\n          {\r\n            title: StepTitleEnum.Focusing,\r\n            timePeriod: 25,\r\n            action: StepActionEnum.Active\r\n          },\r\n          {\r\n            title: StepTitleEnum.Break,\r\n            timePeriod: 5,\r\n            action: StepActionEnum.Disabled\r\n          },\r\n          {\r\n            title: StepTitleEnum.Focusing,\r\n            timePeriod: 25,\r\n            action: StepActionEnum.Disabled\r\n          }\r\n        ]);\r\n\r\n    const getActiveStepTimePeriod = () => {\r\n        var step = steps.find(step => step.action === StepActionEnum.Active);\r\n        if (step === undefined) {\r\n            return undefined;\r\n        }\r\n        return step.timePeriod;\r\n    };\r\n\r\n    const newActiveStep = () => {\r\n        var lastStep = steps[steps.length - 1];\r\n        var addedStep;\r\n        if (lastStep === undefined || lastStep.title === StepTitleEnum.Break) {\r\n            addedStep = {title: StepTitleEnum.Focusing, timePeriod: 25, action: StepActionEnum.Active}\r\n        } else {\r\n            addedStep = {title: StepTitleEnum.Break, timePeriod: 5, action: StepActionEnum.Active}\r\n        }\r\n        return addedStep;\r\n    }\r\n\r\n    const proceedToTheNextStep = () => {\r\n        var [activeStepIndex, shouldAddOneMoreStep] = [undefined, true];\r\n        var updatedSteps = steps.map((step, stepIndex) => {\r\n            if (step.action === StepActionEnum.Active) {\r\n                activeStepIndex = stepIndex;\r\n                step.action = StepActionEnum.Completed;\r\n            }\r\n            if (activeStepIndex !== undefined && (activeStepIndex + 1) === stepIndex && steps.length - 1 > activeStepIndex) {\r\n                steps[stepIndex].action = StepActionEnum.Active;\r\n                shouldAddOneMoreStep = false;\r\n            }\r\n\r\n            return step;\r\n        });\r\n        \r\n        if (shouldAddOneMoreStep) {\r\n            var addedStep = newActiveStep();\r\n            setSteps(steps => [...updatedSteps, addedStep]);\r\n        }\r\n        else {\r\n            setSteps(steps => updatedSteps);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <ActivityTracker steps={steps}></ActivityTracker>\r\n            <Timer countdown={getActiveStepTimePeriod()} proceedToTheNextStep={proceedToTheNextStep}></Timer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react'\r\nimport './Contact.css';\r\n\r\nfunction Contact (props)\r\n{\r\n    return(\r\n        <div className=\"contact-wrapper\">\r\n            <a href=\"https://github.com/daniloikeda\" target=\"_blank\">\r\n                <div className=\"contact_item github\">\r\n                    <i aria-hidden=\"true\" className=\"github big icon\"></i>\r\n                </div>\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/danilo-carneiro-ikeda-310492100/\" target=\"_blank\">\r\n                <div className=\"contact_item linkedin\">\r\n                    <i aria-hidden=\"true\" className=\"linkedin big icon\"></i>\r\n                </div>\r\n            </a>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact; ","import './App.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport Dashboard from './pages/Dashboard';\r\nimport Contact from './components/Contact';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard></Dashboard>\r\n      <Contact></Contact>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}