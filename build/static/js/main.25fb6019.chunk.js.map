{"version":3,"sources":["components/Timer.js","components/ActivityTracker.js","enums/StepActionEnum.js","enums/StepTitleEnum.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","handlePlayButtonClick","setState","timerStopped","timerId","setInterval","remainingCountDown","state","handleNextAction","handlePauseButtonClick","clearInterval","handleResetButtonClick","countdown","proceedToTheNextStep","previousProps","previousState","this","reloadedState","className","onClick","Component","ActivityTracker","steps","map","step","index","action","title","timePeriod","StepActionEnum","StepTitleEnum","Dashboard","getActiveStepTimePeriod","find","undefined","addActiveStep","addedStep","lastStep","length","push","activeStepIndex","findIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25fb6019.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './Timer.css'\r\n\r\nexport default class Timer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timerStopped: true,\r\n      countdown: props.countdown,\r\n      remainingCountDown: props.countdown\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    if (previousProps !== this.props) {\r\n      var reloadedState = {\r\n        timerStopped: true,\r\n        countdown: this.props.countdown,\r\n        remainingCountDown: this.props.countdown\r\n      };\r\n      this.setState(reloadedState);\r\n    }\r\n  }\r\n\r\n  //#region functions\r\n  handlePlayButtonClick = () => {\r\n    this.setState({ timerStopped: false });\r\n\r\n    this.timerId = setInterval(() => {\r\n      this.setState({ remainingCountDown: this.state.remainingCountDown - 1 });\r\n      if (this.state.remainingCountDown < 0) {\r\n        this.handleNextAction();\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  handlePauseButtonClick = () => {\r\n    clearInterval(this.timerId);\r\n    this.setState({ timerStopped: true });\r\n  };\r\n\r\n  handleResetButtonClick = () => {\r\n    clearInterval(this.timerId);\r\n    this.setState({timerStopped: true, remainingCountDown: this.state.countdown});\r\n  };\r\n\r\n  handleNextAction = () => {\r\n    clearInterval(this.timerId);\r\n    this.props.proceedToTheNextStep();\r\n    // this.reloadState();\r\n  }\r\n\r\n  //#endregion\r\n\r\n  render() {\r\n    const { remainingCountDown } = this.state;\r\n    return (\r\n      <div className=\"timer\">\r\n        <div className=\"ui horizontal statistic\">\r\n          <div className=\"value\">{remainingCountDown}</div>\r\n          <div className=\"label\">minutes</div>\r\n        </div>\r\n        <div className=\"timer-buttons-wrap\">\r\n          <button\r\n            className=\"ui labeled icon button\"\r\n            onClick={\r\n              this.state.timerStopped === false\r\n                ? this.handlePauseButtonClick\r\n                : this.handlePlayButtonClick\r\n            }\r\n          >\r\n            <i\r\n              className={!this.state.timerStopped ? \"pause icon\" : \"play icon\"}\r\n            ></i>\r\n            {!this.state.timerStopped ? \"Pause\" : \"Play\"}\r\n          </button>\r\n          <button\r\n            className=\"ui labeled icon button\"\r\n            onClick={this.handleResetButtonClick}\r\n          >\r\n            <i className=\"stop icon\"></i>\r\n            Stop\r\n          </button>\r\n          <button\r\n            className=\"ui labeled icon button\"\r\n            onClick={this.handleNextAction}\r\n          >\r\n            <i className=\"chevron right icon\"></i>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./ActivityTracker.css\";\r\n\r\nexport default class ActivityTracker extends Component {\r\n  render() {\r\n    const { steps } = this.props;\r\n    return (\r\n      <div className=\"activity-tracker\">\r\n        <div className=\"ui steps\">\r\n          {steps &&\r\n            steps.map((step, index) => (\r\n              <div className={step.action + \" step\"} key={index}>\r\n                <i\r\n                  aria-hidden=\"true\"\r\n                  className={\r\n                    step.title === \"Focusing\"\r\n                      ? \"circle outline icon\"\r\n                      : \"coffee icon\"\r\n                  }\r\n                ></i>\r\n                <div className=\"content\">\r\n                  <div className=\"title\">{step.title}</div>\r\n                  <div className=\"description\">{step.timePeriod} minutes</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const StepActionEnum = {\r\n    Completed: 'completed',\r\n    Active: 'active',\r\n    Disabled: 'disabled'\r\n}\r\n","export const StepTitleEnum = {\r\n    Focusing: \"Focusing\",\r\n    Break: \"Break\"\r\n}","import React, { Component } from 'react'\r\nimport Timer from './Timer'\r\nimport ActivityTracker from './ActivityTracker'\r\nimport './Dashboard.css'\r\nimport { StepActionEnum } from '../enums/StepActionEnum'\r\nimport { StepTitleEnum } from '../enums/StepTitleEnum'\r\n\r\nexport default class Dashboard extends Component {\r\n    \r\n    state = {\r\n        steps: [\r\n          {\r\n            title: StepTitleEnum.Focusing,\r\n            timePeriod: 25,\r\n            action: StepActionEnum.Active\r\n          },\r\n          {\r\n            title: StepTitleEnum.Break,\r\n            timePeriod: 5,\r\n            action: StepActionEnum.Disabled\r\n          },\r\n          {\r\n            title: StepTitleEnum.Focusing,\r\n            timePeriod: 25,\r\n            action: StepActionEnum.Disabled\r\n          }\r\n        ]\r\n    };\r\n\r\n    getActiveStepTimePeriod = () => {\r\n        var step = this.state.steps.find(step => step.action === StepActionEnum.Active);\r\n        if (step === undefined) {\r\n            return undefined;\r\n        }\r\n        return step.timePeriod;\r\n    };\r\n\r\n    addActiveStep = () => {\r\n        var steps = this.state.steps;\r\n        if (steps === undefined){\r\n            steps = [];\r\n        }\r\n\r\n        var lastStep = steps[steps.length - 1];\r\n        var addedStep;\r\n        if (lastStep === undefined || lastStep.title === StepTitleEnum.Break) {\r\n            addedStep = {title: StepTitleEnum.Focusing, timePeriod: 25, action: StepActionEnum.Active}\r\n        } else {\r\n            addedStep = {title: StepTitleEnum.Break, timePeriod: 5, action: StepActionEnum.Active}\r\n        }\r\n        \r\n        steps.push(addedStep);\r\n        this.setState({steps: steps});\r\n    }\r\n\r\n    proceedToTheNextStep = () => {\r\n        var activeStepIndex = this.state.steps.findIndex((step) => step.action === StepActionEnum.Active);\r\n\r\n        var steps = this.state.steps;\r\n        steps[activeStepIndex].action = StepActionEnum.Completed;\r\n        if (steps.length - 1 > activeStepIndex) {            \r\n            steps[activeStepIndex + 1].action = StepActionEnum.Active;\r\n            this.setState({steps: steps})\r\n        }\r\n        else {\r\n            var lastStep = steps[steps.length - 1];\r\n            var addedStep;\r\n            if (lastStep === undefined || lastStep.title === StepTitleEnum.Break) {\r\n                addedStep = {title: StepTitleEnum.Focusing, timePeriod: 25, action: StepActionEnum.Active}\r\n            } else {\r\n                addedStep = {title: StepTitleEnum.Break, timePeriod: 5, action: StepActionEnum.Active}\r\n            }\r\n            \r\n            steps.push(addedStep);\r\n            this.setState({steps: steps});\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <ActivityTracker steps={this.state.steps}></ActivityTracker>\r\n                <Timer countdown={this.getActiveStepTimePeriod()} proceedToTheNextStep={this.proceedToTheNextStep}></Timer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport Dashboard from './components/Dashboard';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard></Dashboard>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}